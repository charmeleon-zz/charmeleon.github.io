<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>celeritas</title>
    <link>https://charmeleon.github.io/</link>
    <description>Recent content on celeritas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Aug 2018 10:28:01 -0500</lastBuildDate>
    
	<atom:link href="https://charmeleon.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Beyond Todo Apps</title>
      <link>https://charmeleon.github.io/post/beyond-todo-apps/</link>
      <pubDate>Sat, 11 Aug 2018 10:28:01 -0500</pubDate>
      
      <guid>https://charmeleon.github.io/post/beyond-todo-apps/</guid>
      <description>Developers implement toy projects from scratch to understand new technology. These often implement simple functionality, and none is more pervasive than the &amp;ldquo;Todo&amp;rdquo; app.
The web has too many Todo tutorials, Hello World tutorials, introductions to new frameworks by showing how you handle a click, and it&amp;rsquo;s time to slow these down.
Instead we need to tackle more complex problems to demo the more powerful features when writing sample projects.</description>
    </item>
    
    <item>
      <title>Fibonacci series</title>
      <link>https://charmeleon.github.io/post/fibonacci-series/</link>
      <pubDate>Tue, 07 Aug 2018 19:29:57 -0500</pubDate>
      
      <guid>https://charmeleon.github.io/post/fibonacci-series/</guid>
      <description>I&amp;rsquo;ve been studying algorithms lately. I&amp;rsquo;m still in the early stages of this trek, but I have concluded that coming up with the right solution is not that important. It&amp;rsquo;s far more valuable to be able to attack a problem with multiple strategies (note: code examples are written in JavaScript).
As an example, take the Fibonacci series where the nth Fibonacci number is defined by the recurrence relation F(n) = F(n - 1) + F(n - 2), and the definitions F(0) = 1 and F(1) = 1.</description>
    </item>
    
    <item>
      <title>React Typescript Tic Tac Toe</title>
      <link>https://charmeleon.github.io/post/react-typescript-tic-tac-toe/</link>
      <pubDate>Mon, 28 May 2018 19:33:57 -0500</pubDate>
      
      <guid>https://charmeleon.github.io/post/react-typescript-tic-tac-toe/</guid>
      <description>If you are on the fence about starting your next React project with TypeScript but feel that you&amp;rsquo;re lacking an introduction, this one is for you. TypeScript syntax should feel familiar to you if you have JavaScript experience and becomes intuitive after spending some time on it.
The live demo for the finished version of this project is here, and the code is open source on its own Github repo.</description>
    </item>
    
    <item>
      <title>Welcome Hugo</title>
      <link>https://charmeleon.github.io/post/welcome-hugo/</link>
      <pubDate>Sun, 20 Aug 2017 19:15:39 -0500</pubDate>
      
      <guid>https://charmeleon.github.io/post/welcome-hugo/</guid>
      <description>After a recent hiatus I think it may prove useful to start writing again.
In the process I&amp;rsquo;ve decided to run this personal blog with Hugo, the static site generator written in Golang, which is exciting to a lot of people. For the time being this is because I never developed a curiosity around Jekyll; mostly due to its underlying Ruby-esque architecture and design (my apologies to Sinatra, the micro-framework that re-ignited web frameworks).</description>
    </item>
    
  </channel>
</rss>