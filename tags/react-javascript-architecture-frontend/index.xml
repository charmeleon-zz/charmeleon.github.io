<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>react, javascript, architecture, frontend on celeritas</title>
    <link>https://charmeleon.github.io/tags/react-javascript-architecture-frontend/</link>
    <description>Recent content in react, javascript, architecture, frontend on celeritas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Aug 2019 12:46:18 -0500</lastBuildDate>
    
	<atom:link href="https://charmeleon.github.io/tags/react-javascript-architecture-frontend/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Organizing Frontend Projects</title>
      <link>https://charmeleon.github.io/post/organizing-frontend-projects/</link>
      <pubDate>Sun, 11 Aug 2019 12:46:18 -0500</pubDate>
      
      <guid>https://charmeleon.github.io/post/organizing-frontend-projects/</guid>
      <description>A frequent question with frontend projects is how they should be structured. Not too long ago a single PHP file was enough for backend, HTML and JS/CSS logic; but with increasing complexity the need to organize in sensible fashion has become obvious. What is less obvious is your options, so let&amp;rsquo;s go over some.
Starting a new React project, the scaffolding provided by create-react-app is simple enough for a UI project:</description>
    </item>
    
  </channel>
</rss>